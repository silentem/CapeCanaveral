apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

def keystorePropertiesFile = rootProject.file("./keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.whaletail.capecanaveral"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            minifyEnabled true
            debuggable false
            proguardFiles 'proguard-rules.pro'
            multiDexEnabled = true
        }
        debug {
            signingConfig signingConfigs.config
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'
        }
    }


    kotlinOptions {
        jvmTarget = "1.8"
    }
    androidExtensions {
        experimental = true
    }

    flavorDimensions "channel"
    lintOptions {
        abortOnError false
    }


    splits {
        // Settings to build multiple APKs based on screen density.
        density {

            // Enable or disable building multiple APKs.
            enable false

        }
    }
    dynamicFeatures = [":dynamicfeature"]


}

dependencies {

    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    testImplementation "org.assertj:assertj-core:3.11.1"

    implementation "androidx.core:core-ktx:1.0.2"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0-rc01'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'


    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.8'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.3.41'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    //anko
    implementation 'org.jetbrains.anko:anko-common:0.10.3'
    implementation 'org.jetbrains.anko:anko-commons:0.10.4'

    //dagger2
    implementation "com.google.dagger:dagger-android:2.24"

    kapt "com.google.dagger:dagger-compiler:2.24"
    kapt "com.google.dagger:dagger-android-processor:2.24"
    implementation "com.google.dagger:dagger-android-support:2.24"

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.8.9'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-core:2.8.9'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0-RC'

    implementation "androidx.work:work-runtime-ktx:2.2.0"


    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation "org.assertj:assertj-core:3.11.1"
    androidTestImplementation "org.mockito:mockito-android:2.25.0"

    androidTestImplementation "androidx.benchmark:benchmark-junit4:1.0.0-beta01"
    androidTestImplementation 'junit:junit:4.12'

}


task copyApks(type: Copy) {
    from("$buildDir/outputs/apk") {
        exclude '**/*unsigned.apk', '**/*unaligned.apk'
    }
    into '../apks'
}
